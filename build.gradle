config {
    info {
        description = 'ItemReaders and ItemWriters for Redis'
        inceptionYear = '2020'
        tags = ['spring', 'batch', 'redis']
        bytecodeVersion = 8
        links {
            website      = "https://github.com/redis-developer/${project.rootProject.name}"
            issueTracker = "https://github.com/redis-developer/${project.rootProject.name}/issues"
            scm          = "https://github.com/redis-developer/${project.rootProject.name}.git"
        }
        scm {
            url                 = "https://github.com/redis-developer/${project.rootProject.name}"
            connection          = "scm:git:https://github.com/redis-developer/${project.rootProject.name}.git"
            developerConnection = "scm:git:git@github.com:redis-developer/${project.rootProject.name}.git"
        }
        specification {
            enabled = true
        }
        implementation {
            enabled = true
        }
        people {
            person {
                id    = 'jruaux'
                name  = 'Julien Ruaux'
                url   = 'https://github.com/jruaux'
                roles = ['developer']
                properties = [
                    github : 'j'
                ]
            }
        }
    }

    licensing {
        enabled = false
        licenses {
            license {
                id = 'Apache-2.0'
            }
        }
    }

    docs {
        javadoc {
            autoLinks {
                enabled = false
            }
            aggregate {
                enabled = false
            }
        }
    }
    
    coverage {
        jacoco {
            toolVersion = '0.8.8'
        }
    }
    
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
    }

    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
    
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    
    tasks.withType(JavaCompiler) {
        options.compilerArgs += ['-Duser.language=en', '-Duser.country=US']
    }
}

subprojects {
    config {
        info {
            description = project.project_description
        }
	    coverage {
	        jacoco {
	            toolVersion = '0.8.8'
	        }
	    }
    }
    
    dependencies {
        compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: jsr305Version
    }
    
    test {
        useJUnitPlatform()
    }

    bootJar {
        enabled = false
    }
    
    jar {
        enabled = true
        archiveClassifier = ''
    }
    
    configurations.all {
		resolutionStrategy.eachDependency { DependencyResolveDetails details ->
			if (details.requested.name == 'lettuce-core' ) {
				details.useVersion lettuceVersion
			}
		}
	}

    sourceCompatibility = 8
    targetCompatibility = 8

}